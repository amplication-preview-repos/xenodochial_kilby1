/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Integration as PrismaIntegration } from "@prisma/client";

export class IntegrationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.IntegrationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.integration.count(args);
  }

  async integrations<T extends Prisma.IntegrationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationFindManyArgs>
  ): Promise<PrismaIntegration[]> {
    return this.prisma.integration.findMany<Prisma.IntegrationFindManyArgs>(
      args
    );
  }
  async integration<T extends Prisma.IntegrationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationFindUniqueArgs>
  ): Promise<PrismaIntegration | null> {
    return this.prisma.integration.findUnique(args);
  }
  async createIntegration<T extends Prisma.IntegrationCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationCreateArgs>
  ): Promise<PrismaIntegration> {
    return this.prisma.integration.create<T>(args);
  }
  async updateIntegration<T extends Prisma.IntegrationUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationUpdateArgs>
  ): Promise<PrismaIntegration> {
    return this.prisma.integration.update<T>(args);
  }
  async deleteIntegration<T extends Prisma.IntegrationDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationDeleteArgs>
  ): Promise<PrismaIntegration> {
    return this.prisma.integration.delete(args);
  }
}
